var b=Object.defineProperty;var S=(o,t,a)=>t in o?b(o,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[t]=a;var r=(o,t,a)=>(S(o,typeof t!="symbol"?t+"":t,a),a);import{P as u,v as k}from"./vendor.65781a6a.js";const P=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const h of i.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&n(h)}).observe(document,{childList:!0,subtree:!0});function a(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerpolicy&&(i.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?i.credentials="include":s.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=a(s);fetch(s.href,i)}};P();function e(o){return o*globalThis.pixelRatio}class x extends u.Scene{constructor(){super("main-scene");r(this,"groundLayer");r(this,"bredde");r(this,"hoyde");r(this,"map");r(this,"helt");r(this,"presentsGroup");r(this,"hasJumpedTwice",!1);r(this,"timeSinceLastJump");r(this,"backgroundMountains");r(this,"backgroundSnow");r(this,"collectedPresents",0);r(this,"collectedPresentsText")}init(){this.bredde=this.game.scale.gameSize.width,this.hoyde=this.game.scale.gameSize.height}create(){var f;const t=e(32);this.presentsGroup=this.physics.add.group({allowGravity:!1}),this.map=this.make.tilemap({key:"map"});const a=this.map.addTilesetImage(`tiles-sprite@${e(1)}`,"tiles"),n=this.map.addTilesetImage(`presents-sprite@${e(1)}`,"presents"),s=this.map.addTilesetImage(`korona-sprite@${e(1)}`,"coronas");this.backgroundMountains=this.add.tileSprite(0,0,this.bredde,this.hoyde,"background-mountains").setOrigin(0,0).setScrollFactor(0).setScale(e(1)),this.backgroundSnow=this.add.tileSprite(0,0,this.bredde,this.hoyde,"background-snow").setOrigin(0,0).setScale(e(1)).setScrollFactor(0);const i=.5;var m=this.add.particles("snow").createEmitter({x:{min:0,max:this.map.widthInPixels*i+this.bredde/2},y:e(-10),lifespan:{min:2e4,max:6e4},speedY:{min:e(2),max:e(10)},speedX:{min:e(-10),max:e(10)},angle:{min:0,max:180},gravityY:e(1),scale:{min:.4,max:1},quantity:5,frequency:500,rotate:{start:0,end:180},frame:[0,1,2]});m.scrollFactorX=i,m.randomFrame=!0,console.log("this.map.widthInPixels",this.map.widthInPixels);const l=this.map.createLayer("level01",[a,n,s]);l.setCollisionByProperty({collision:!0}),this.presentsGroup=this.physics.add.group({allowGravity:!1,immovable:!0});const w=(f=this.map.tilesets.find(d=>d.name.startsWith("presents-sprite")))==null?void 0:f.firstgid;for(let d=0;d<this.map.width;d++)for(let c=0;c<this.map.height;c++)if(l.hasTileAt(d,c)){const g=l.getTileAt(d,c);g.properties.present===!0&&(g.visible=!1,this.presentsGroup.create(d*t,c*t,"present",g.index-w).setOrigin(0,0))}this.helt=this.physics.add.sprite(0,0,"helt"),this.helt.setPosition(this.helt.width/2,this.hoyde-this.helt.height/2-t*2),this.helt.anims.create({key:"walk",frames:this.anims.generateFrameNumbers("helt",{frames:[1,0]}),frameRate:6,repeat:-1}),this.helt.anims.create({key:"stand",frames:this.anims.generateFrameNumbers("helt",{frames:[1]})}),this.helt.anims.create({key:"jump",frames:this.anims.generateFrameNumbers("helt",{frames:[0]})}),this.helt.setBounce(.1),this.input.on("pointerdown",()=>{console.log("hopp")}),this.cameras.main.startFollow(this.helt),this.cameras.main.setBounds(0,0,this.map.widthInPixels,this.map.heightInPixels),this.physics.add.collider(this.helt,l),this.physics.add.overlap(this.helt,this.presentsGroup,(d,c)=>{c.disableBody(!0,!0),this.collectedPresents+=1,this.updateText()}),this.collectedPresentsText=this.add.text(e(16),e(16),"",{fontSize:`${e(24)}px`,color:"#000"}),this.collectedPresentsText.setScrollFactor(0,0),this.reset()}update(t){this.backgroundMountains.tilePositionX=this.cameras.main.scrollX*.2/e(1),this.backgroundSnow.tilePositionX=this.cameras.main.scrollX*.6/e(1),this.input.activePointer.isDown&&(this.helt.body.blocked.down||this.helt.body.touching.down)&&console.log("Klar for hoppings?",this.helt.body.touching),this.input.activePointer.isDown&&(this.helt.body.blocked.down||this.helt.body.touching.down||this.hasJumpedTwice)?(this.helt.setVelocityY(e(-200)),(!this.timeSinceLastJump||t-this.timeSinceLastJump>300)&&(this.hasJumpedTwice?(console.log("update2",this.hasJumpedTwice,t),this.hasJumpedTwice=!1):(console.log("update3",this.hasJumpedTwice,t),this.hasJumpedTwice=!0,this.timeSinceLastJump=t))):this.helt.setVelocityX(e(100)),this.helt.body.onFloor()&&!this.helt.body.onWall()?this.helt.play("walk",!0):this.helt.body.onFloor()?this.helt.play("stand",!0):this.helt.play("jump",!0),this.helt.x>this.map.widthInPixels&&this.scene.restart()}updateText(){this.collectedPresentsText.setText(`pakker: ${this.collectedPresents}`)}reset(){this.collectedPresents=0,this.updateText()}}class v extends u.Scene{constructor(){super({key:"preload-scene"})}preload(){console.log("preload-scene"),this.load.spritesheet("helt",`/assets/helt-sprite@${e(1)}.png`,{frameWidth:e(32),frameHeight:e(40),margin:1,spacing:2}),this.load.spritesheet("present",`/assets/presents-sprite@${e(1)}.png`,{frameWidth:e(32),frameHeight:e(32),margin:1,spacing:2}),this.load.image("tiles",`/assets/tiles-sprite@${e(1)}.png`),this.load.image("presents",`/assets/presents-sprite@${e(1)}.png`),this.load.image("coronas",`/assets/korona-sprite@${e(1)}.png`),this.load.image("background-mountains","/assets/background-mountains@1.png"),this.load.image("background-snow","/assets/background-snow@1.png"),this.load.spritesheet("snow",`/assets/snow-sprite@${e(1)}.png`,{frameWidth:e(16),frameHeight:e(16),margin:1,spacing:2}),this.load.tilemapTiledJSON("map",`assets/levels@${e(1)}.json`)}create(){this.scene.start("main-scene")}}function T(o,t,a,n,s){return{type:Phaser.AUTO,scene:[v,x],width:o*n,height:t*n,backgroundColor:8900331,autoFocus:!0,parent:"game",render:{},physics:{default:"arcade",arcade:{gravity:{y:300*n},debug:s}},scale:{mode:a,autoCenter:Phaser.Scale.Center.CENTER_BOTH,zoom:1/n}}}function F(o={}){const{immediate:t=!1,onNeedRefresh:a,onOfflineReady:n,onRegistered:s,onRegisterError:i}=o;let h;const m=async(l=!0)=>{};return"serviceWorker"in navigator&&(h=new k("/sw.js",{scope:"/"}),h.addEventListener("activated",l=>{l.isUpdate?window.location.reload():n==null||n()}),h.register({immediate:t}).then(l=>{s==null||s(l)}).catch(l=>{i==null||i(l)})),m}let y=!0;y=!1;let p=window.devicePixelRatio;p!==1&&p!==2&&p!==3&&(p=1);globalThis.pixelRatio=p;const L=T(400,640,u.Scale.ScaleModes.NONE,p,y);new u.Game(L);window.onload=()=>{console.log("onload: Let's wait a little more...");const o=document.querySelector("#loader"),t=document.querySelector("#preload"),a=document.querySelector("#game");o.style.display="none",t.style.display="none",a.style.display="block"};F({onNeedRefresh(){console.log("onNeedRefresh called")},onOfflineReady(){console.log("onOfflineReady called")}});
